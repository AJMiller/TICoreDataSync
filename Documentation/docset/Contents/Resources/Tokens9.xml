<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/TICDSError.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/TICDSError</TokenIdentifier>
			<Abstract>TICDSError is a utility class to generate NSError objects with certain characteristics.</Abstract>
			<DeclaredIn>TICDSError.h</DeclaredIn>
			
			<NodeRef refid="9"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TICDSError/errorWithCode:userInfo:</TokenIdentifier>
			<Abstract>Generate an error with the given code.</Abstract>
			<DeclaredIn>TICDSError.h</DeclaredIn>			
			
			<Declaration>+ (NSError *)errorWithCode:(TICDSErrorCode)aCode userInfo:(id)someInfo</Declaration>
			<Parameters>
				<Parameter>
					<Name>aCode</Name>
					<Abstract>The error code to use.</Abstract>
				</Parameter><Parameter>
					<Name>someInfo</Name>
					<Abstract>The user info to set on the NSError object.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>A properly-configured NSError object.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:userInfo:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TICDSError/errorWithCode:classAndMethod:</TokenIdentifier>
			<Abstract>Generate an error with the given code in a specific class and method.</Abstract>
			<DeclaredIn>TICDSError.h</DeclaredIn>			
			
			<Declaration>+ (NSError *)errorWithCode:(TICDSErrorCode)aCode classAndMethod:(const char *)aClassAndMethod</Declaration>
			<Parameters>
				<Parameter>
					<Name>aCode</Name>
					<Abstract>The error code to use.</Abstract>
				</Parameter><Parameter>
					<Name>aClassAndMethod</Name>
					<Abstract>A C-string, typically provided by PRETTY_FUNCTION.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>A properly-configured NSError object with the class and method specified in the user info.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:classAndMethod:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TICDSError/errorWithCode:underlyingError:classAndMethod:</TokenIdentifier>
			<Abstract>Generate an error with the given code and another underlying error in a specific class and method.</Abstract>
			<DeclaredIn>TICDSError.h</DeclaredIn>			
			
			<Declaration>+ (NSError *)errorWithCode:(TICDSErrorCode)aCode underlyingError:(NSError *)anUnderlyingError classAndMethod:(const char *)aClassAndMethod</Declaration>
			<Parameters>
				<Parameter>
					<Name>aCode</Name>
					<Abstract>The error code to use.</Abstract>
				</Parameter><Parameter>
					<Name>anUnderlyingError</Name>
					<Abstract>The underlying NSError that caused this particular TICoreDataSync error.</Abstract>
				</Parameter><Parameter>
					<Name>aClassAndMethod</Name>
					<Abstract>A C-string, typically provided by PRETTY_FUNCTION.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>A properly-configured NSError object, with the underlying error, and class and method specified in the user info.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:underlyingError:classAndMethod:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TICDSError/errorWithCode:underlyingError:userInfo:classAndMethod:</TokenIdentifier>
			<Abstract>Generate an error with the given code and another underlying error in a specific class and method, also providing your own user info.</Abstract>
			<DeclaredIn>TICDSError.h</DeclaredIn>			
			
			<Declaration>+ (NSError *)errorWithCode:(TICDSErrorCode)aCode underlyingError:(NSError *)anUnderlyingError userInfo:(id)someInfo classAndMethod:(const char *)aClassAndMethod</Declaration>
			<Parameters>
				<Parameter>
					<Name>aCode</Name>
					<Abstract>The error code to use.</Abstract>
				</Parameter><Parameter>
					<Name>anUnderlyingError</Name>
					<Abstract>The underlying NSError that caused this particular TICoreDataSync error.</Abstract>
				</Parameter><Parameter>
					<Name>someInfo</Name>
					<Abstract>The user info you wish to supply (in addition that created automatically) for this error.</Abstract>
				</Parameter><Parameter>
					<Name>aClassAndMethod</Name>
					<Abstract>A C-string, typically provided by PRETTY_FUNCTION.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract>A properly-configured NSError object, with the underlying error and class and method, specified in the user info, which will be merged with the provided someInfo.</Abstract></ReturnValue>
			<Anchor>//api/name/errorWithCode:underlyingError:userInfo:classAndMethod:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TICDSError/setIncludeStackTraceInErrors:</TokenIdentifier>
			<Abstract>Specify whether to include a stack trace in errors generated by TICDSError class factory methods.</Abstract>
			<DeclaredIn>TICDSError.h</DeclaredIn>			
			
			<Declaration>+ (void)setIncludeStackTraceInErrors:(BOOL)shouldInclude</Declaration>
			<Parameters>
				<Parameter>
					<Name>shouldInclude</Name>
					<Abstract>A Boolean indicating whether to include a stack trace.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setIncludeStackTraceInErrors:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/TICDSError/includeStackTraceInErrors</TokenIdentifier>
			<Abstract>Indicates whether a stack trace will be included in  errors generated by TICDSError class factory methods.</Abstract>
			<DeclaredIn>TICDSError.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)includeStackTraceInErrors</Declaration>
			
			<ReturnValue><Abstract>A Boolean indicating whether a stack trace will be included.</Abstract></ReturnValue>
			<Anchor>//api/name/includeStackTraceInErrors</Anchor>
		</Token>
		
	</File>
</Tokens>